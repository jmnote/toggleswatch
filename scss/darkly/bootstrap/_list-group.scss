// Base class
//
// Easily usable on <ul>, <ol>, or <div>.
.list-group {
  // No need to set list-style: none; since .list-group-item is block level
}
// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.
.list-group-item-action {
  color: $list-group-action-color;
  // Hover state
  @include hover-focus() {
    color: $list-group-action-hover-color;
    background-color: $list-group-hover-bg;
  }
  &:active {
    color: $list-group-action-active-color;
    background-color: $list-group-action-active-bg;
  }
}
// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.
.list-group-item {
  color: $list-group-color;
  background-color: $list-group-bg;
  border: $list-group-border-width solid $list-group-border-color;
  &:first-child {
  }
  &:last-child {
  }
  &.disabled,
  &:disabled {
    color: $list-group-disabled-color;
    background-color: $list-group-disabled-bg;
  }
  // Include both here for `<a>`s and `<button>`s
  &.active {
    color: $list-group-active-color;
    background-color: $list-group-active-bg;
    border-color: $list-group-active-border-color;
  }
  & + & {
    &.active {
    }
  }
}
// Horizontal
//
// Change the layout of list group items from vertical (default) to horizontal.
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .list-group-horizontal#{$infix} {
      > .list-group-item {
        &:first-child {
        }
        &:last-child {
        }
        &.active {
        }
        & + .list-group-item {
          &.active {
          }
        }
      }
    }
  }
}
// Flush list items
//
// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).
.list-group-flush {
  > .list-group-item {
    &:last-child {
    }
  }
}
// Contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.
@each $color, $value in $theme-colors {
  @include list-group-item-variant($color, theme-color-level($color, -9), theme-color-level($color, 6));
}
