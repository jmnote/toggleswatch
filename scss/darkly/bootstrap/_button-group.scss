// stylelint-disable selector-no-qualifying-type
// Make the div behave like a button
.btn-group,
.btn-group-vertical {
  > .btn {
    // Bring the hover, focused, and "active" buttons to the front to overlay
    // the borders properly
    @include hover() {
    }
    &:focus,
    &:active,
    &.active {
    }
  }
}
// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
  .input-group {
  }
}
.btn-group {
  // Prevent double borders when buttons are next to each other
  > .btn:not(:first-child),
  > .btn-group:not(:first-child) {
  }
  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
  }
  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
  }
}
// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.
.btn-group-sm > .btn {  }
.btn-group-lg > .btn {  }
//
// Split button dropdowns
//
.dropdown-toggle-split {
  &::after,
  .dropup &::after,
  .dropright &::after {
  }
  .dropleft &::before {
  }
}
.btn-sm + .dropdown-toggle-split {
}
.btn-lg + .dropdown-toggle-split {
}
// The clickable button for toggling the menu
// Set the same inset shadow as the :active state
.btn-group.show .dropdown-toggle {
  @include box-shadow($btn-active-box-shadow);
  // Show no shadow for `.btn-link` since it has no other button styles.
  &.btn-link {
  }
}
//
// Vertical button groups
//
.btn-group-vertical {
  > .btn,
  > .btn-group {
  }
  > .btn:not(:first-child),
  > .btn-group:not(:first-child) {
  }
  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
  }
  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
  }
}
// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.
.btn-group-toggle {
  > .btn,
  > .btn-group > .btn {
    input[type="radio"],
    input[type="checkbox"] {
    }
  }
}
