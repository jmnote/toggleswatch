// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// https://useiconic.com/open
// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.
.custom-control {
}
.custom-control-inline {
}
.custom-control-input {
  &:checked ~ .custom-control-label::before {
    color: $custom-control-indicator-checked-color;
    border-color: $custom-control-indicator-checked-border-color;
    @include gradient-bg($custom-control-indicator-checked-bg);
    @include box-shadow($custom-control-indicator-checked-box-shadow);
  }
  &:focus ~ .custom-control-label::before {
    // the mixin is not used here to make sure there is feedback
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $custom-control-indicator-focus-box-shadow;
    }
  }
  &:focus:not(:checked) ~ .custom-control-label::before {
    border-color: $custom-control-indicator-focus-border-color;
  }
  &:not(:disabled):active ~ .custom-control-label::before {
    color: $custom-control-indicator-active-color;
    background-color: $custom-control-indicator-active-bg;
    border-color: $custom-control-indicator-active-border-color;
    @include box-shadow($custom-control-indicator-active-box-shadow);
  }
  // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .custom-control-label {
      color: $custom-control-label-disabled-color;
      &::before {
        background-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}
// Custom control indicators
//
// Build the custom controls out of pseudo-elements.
.custom-control-label {
  color: $custom-control-label-color;
  // Background-color and (when enabled) gradient
  &::before {
    background-color: $custom-control-indicator-bg;
    border: $custom-control-indicator-border-color solid $custom-control-indicator-border-width;
    @include box-shadow($custom-control-indicator-box-shadow);
  }
  // Foreground (icon)
  &::after {
    background: no-repeat 50% / #{$custom-control-indicator-bg-size};
  }
}
// Checkboxes
//
// Tweak just a few things for checkboxes.
.custom-checkbox {
  .custom-control-label::before {
  }
  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: escape-svg($custom-checkbox-indicator-icon-checked);
    }
  }
  .custom-control-input:indeterminate ~ .custom-control-label {
    &::before {
      border-color: $custom-checkbox-indicator-indeterminate-border-color;
      @include gradient-bg($custom-checkbox-indicator-indeterminate-bg);
      @include box-shadow($custom-checkbox-indicator-indeterminate-box-shadow);
    }
    &::after {
      background-image: escape-svg($custom-checkbox-indicator-icon-indeterminate);
    }
  }
  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      @include gradient-bg($custom-control-indicator-checked-disabled-bg);
    }
    &:indeterminate ~ .custom-control-label::before {
      @include gradient-bg($custom-control-indicator-checked-disabled-bg);
    }
  }
}
// Radios
//
// Tweak just a few things for radios.
.custom-radio {
  .custom-control-label::before {
    // stylelint-disable-next-line property-blacklist
  }
  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: escape-svg($custom-radio-indicator-icon-checked);
    }
  }
  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      @include gradient-bg($custom-control-indicator-checked-disabled-bg);
    }
  }
}
// switches
//
// Tweak a few things for switches
.custom-switch {
  .custom-control-label {
    &::before {
      // stylelint-disable-next-line property-blacklist
    }
    &::after {
      background-color: $custom-control-indicator-border-color;
      // stylelint-disable-next-line property-blacklist
    }
  }
  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: $custom-control-indicator-bg;
    }
  }
  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      @include gradient-bg($custom-control-indicator-checked-disabled-bg);
    }
  }
}
// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primer.github.io/.
//
.custom-select {
  color: $custom-select-color;
  background: $custom-select-bg $custom-select-background;
  border: $custom-select-border-width solid $custom-select-border-color;
  @include box-shadow($custom-select-box-shadow);
  &:focus {
    border-color: $custom-select-focus-border-color;
    @if $enable-shadows {
      @include box-shadow($custom-select-box-shadow, $custom-select-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $custom-select-focus-box-shadow;
    }
    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // suppress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: $input-color;
      background-color: $input-bg;
    }
  }
  &[multiple],
  &[size]:not([size="1"]) {
  }
  &:disabled {
    color: $custom-select-disabled-color;
    background-color: $custom-select-disabled-bg;
  }
  // Hides the default caret in IE11
  &::-ms-expand {
  }
  // Remove outline from select box in FF
  &:-moz-focusring {
    text-shadow: 0 0 0 $custom-select-color;
  }
}
.custom-select-sm {
}
.custom-select-lg {
}
// File
//
// Custom file input.
.custom-file {
}
.custom-file-input {
  &:focus ~ .custom-file-label {
    border-color: $custom-file-focus-border-color;
    box-shadow: $custom-file-focus-box-shadow;
  }
  // Use [disabled] and :disabled to work around https://github.com/twbs/bootstrap/issues/28247
  &[disabled] ~ .custom-file-label,
  &:disabled ~ .custom-file-label {
    background-color: $custom-file-disabled-bg;
  }
  @each $lang, $value in $custom-file-text {
    &:lang(#{$lang}) ~ .custom-file-label::after {
    }
  }
  ~ .custom-file-label[data-browse]::after {
  }
}
.custom-file-label {
  color: $custom-file-color;
  background-color: $custom-file-bg;
  border: $custom-file-border-width solid $custom-file-border-color;
  @include box-shadow($custom-file-box-shadow);
  &::after {
    color: $custom-file-button-color;
    @include gradient-bg($custom-file-button-bg);
  }
}
// Range
//
// Style range inputs the same across browsers. Vendor-specific rules for pseudo
// elements cannot be mixed. As such, there are no shared styles for focus or
// active states on prefixed selectors.
.custom-range {
  &:focus {
    // Pseudo-elements must be split across multiple rulesets to have an effect.
    // No box-shadow() mixin for focus accessibility.
    &::-webkit-slider-thumb { box-shadow: $custom-range-thumb-focus-box-shadow; }
    &::-moz-range-thumb     { box-shadow: $custom-range-thumb-focus-box-shadow; }
    &::-ms-thumb            { box-shadow: $custom-range-thumb-focus-box-shadow; }
  }
  &::-moz-focus-outer {
  }
  &::-webkit-slider-thumb {
    @include gradient-bg($custom-range-thumb-bg);
    @include box-shadow($custom-range-thumb-box-shadow);
    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }
  &::-webkit-slider-runnable-track {
     // Why?
    background-color: $custom-range-track-bg;
    @include box-shadow($custom-range-track-box-shadow);
  }
  &::-moz-range-thumb {
    @include gradient-bg($custom-range-thumb-bg);
    @include box-shadow($custom-range-thumb-box-shadow);
    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }
  &::-moz-range-track {
    background-color: $custom-range-track-bg;
     // Firefox specific?
    @include box-shadow($custom-range-track-box-shadow);
  }
  &::-ms-thumb {
    @include gradient-bg($custom-range-thumb-bg);
    @include box-shadow($custom-range-thumb-box-shadow);
    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }
  &::-ms-track {
    @include box-shadow($custom-range-track-box-shadow);
  }
  &::-ms-fill-lower {
    background-color: $custom-range-track-bg;
  }
  &::-ms-fill-upper {
    background-color: $custom-range-track-bg;
  }
  &:disabled {
    &::-webkit-slider-thumb {
      background-color: $custom-range-thumb-disabled-bg;
    }
    &::-webkit-slider-runnable-track {
    }
    &::-moz-range-thumb {
      background-color: $custom-range-thumb-disabled-bg;
    }
    &::-moz-range-track {
    }
    &::-ms-thumb {
      background-color: $custom-range-thumb-disabled-bg;
    }
  }
}
.custom-control-label::before,
.custom-file-label,
.custom-select {
}
